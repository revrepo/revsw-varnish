.\" Man page generated from reStructuredText.
.
.TH VMOD_QUERYSTRING 3 "2012-06-18" "0.2" ""
.SH NAME
vmod_querystring \- Varnish QueryString Module
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" libvmod-querystring - querystring manipulation module for Varnish
.\" 
.\" libvmod-querystring - querystring manipulation module for Varnish
.\" 
.\" Copyright (C) 2012-2014, Dridi Boukelmoune <dridi.boukelmoune@gmail.com>
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\" 1. Redistributions of source code must retain the above
.\"    copyright notice, this list of conditions and the following
.\"    disclaimer.
.\" 2. Redistributions in binary form must reproduce the above
.\"    copyright notice, this list of conditions and the following
.\"    disclaimer in the documentation and/or other materials
.\"    provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
.\" COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.
.SH SYNOPSIS
.sp
import querystring;
.SH DESCRIPTION
.sp
Varnish multipurpose vmod for URI query\-string manipulation. Can be used to
normalize for instance request URLs or Location response headers in various
ways. It is recommended to at least clean incoming request URLs (removing empty
parameters or query\-strings), all other functions do the cleaning.
.SH FUNCTIONS
.SS clean
.INDENT 0.0
.TP
.B Prototype
STRING clean(STRING url)
.TP
.B Description
Returns the given URI without empty parameters. The query\-string is removed
if empty (either before or after the removal of empty parameters).
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.clean(req.url);
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS remove
.INDENT 0.0
.TP
.B Prototype
STRING remove(STRING url)
.TP
.B Description
Returns the given URI with its query\-string removed
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.remove(req.url);
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS sort
.INDENT 0.0
.TP
.B Prototype
STRING sort(STRING url)
.TP
.B Description
Returns the given URI with its query\-string sorted
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.sort(req.url);
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS filtersep
.INDENT 0.0
.TP
.B Prototype
STRING filtersep()
.TP
.B Description
Returns the separator needed by the filter and filter_except functions
.UNINDENT
.SS filter
.INDENT 0.0
.TP
.B Prototype
STRING filter(STRING url, STRING_LIST parameter_names)
.TP
.B Description
Returns the given URI without the listed parameters
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.filter(req.url,
  "utm_source" + querystring.filtersep() +
  "utm_medium" + querystring.filtersep() +
  "utm_campaign");
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS filter_except
.INDENT 0.0
.TP
.B Prototype
STRING filter_except(STRING url, STRING_LIST parameter_names)
.TP
.B Description
Returns the given URI but only keeps the listed parameters
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.filter(req.url,
                                 "q" + querystring.filtersep() + "p");
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS regfilter
.INDENT 0.0
.TP
.B Prototype
STRING regfilter(STRING url, STRING parameter_names_regex)
.TP
.B Description
Returns the given URI without the parameters matching a regular expression
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.regfilter(req.url, "utm\e_.*");
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS regfilter_except
.INDENT 0.0
.TP
.B Prototype
STRING regfilter_except(STRING url, STRING parameter_names_regex)
.TP
.B Description
Returns the given URI but only keeps the parameters matching a regular
expression
.TP
.B Example
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
set req.url = querystring.regfilter_except(req.url, "^(q|p)$");
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SH EXAMPLES
.sp
In your VCL you could then use this vmod along the following lines:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import querystring;

sub vcl_hash {
   # sort the URL before the request hashing
   set req.url = querystring.sort(req.url);
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH ACKNOWLEDGMENT
.sp
The sort algorithm is a mix of Jason Mooberry\(aqs Skwurly and my own QuerySort
with regards for the Varnish workspace memory model of the worker threads.
.SH COPYRIGHT
.sp
This document is licensed under the same license as the
libvmod\-querystring project. See LICENSE for details.
.INDENT 0.0
.IP \(bu 2
Copyright (c) 2012\-2014 Dridi Boukelmoune
.UNINDENT
.SH AUTHOR
Dridi Boukelmoune
.\" Generated by docutils manpage writer.
.
