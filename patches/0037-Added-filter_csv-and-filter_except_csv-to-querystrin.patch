From 3f986b256c34ea152481bb17ed213a7795cd864d Mon Sep 17 00:00:00 2001
From: sorinrevsw <sorin@revsw.com>
Date: Fri, 23 Jan 2015 16:50:51 +0200
Subject: [PATCH 37/63] Added 'filter_csv' and 'filter_except_csv' to
 'querystring' VMOD.

---
 debian/changelog                                  |   6 ++
 debian/rules                                      |   8 +-
 libvmod-querystring-4.0/src/vmod_querystring.c    | 117 +++++++++++++++++++++-
 libvmod-querystring-4.0/src/vmod_querystring3.vcc |   2 +
 libvmod-querystring-4.0/src/vmod_querystring4.vcc |  22 +++-
 5 files changed, 146 insertions(+), 9 deletions(-)

diff --git a/debian/changelog b/debian/changelog
index 341f212..4190fea 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -1,3 +1,9 @@
+revsw-varnish4-modules (0.5-5) unstable; urgency=medium
+
+  * Added 'filter_csv' and 'filter_except_csv' to 'querystring' VMOD.
+
+ -- Sorin Otescu <sorin@revsw.com>  Thu, 22 Jan 2015 20:41:39 +0200
+
 revsw-varnish4-modules (0.5-4) unstable; urgency=medium
 
   * Added 'querystring' VMOD.
diff --git a/debian/rules b/debian/rules
index ae959ce..debfcd3 100755
--- a/debian/rules
+++ b/debian/rules
@@ -10,12 +10,12 @@ LOCAL_CFLAGS := -g3
 LOCAL_LDFLAGS := -g3
 
 override_dh_auto_configure:
+	cd libvmod-querystring-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
 	cd libvmod-chromelogger-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
 	cd libvmod-cookie-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
 	cd libvmod-revvar-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
 	cd libvmod-header-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
 	cd libvmod-timers-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
-	cd libvmod-querystring-4.0 && ./autogen.sh && CFLAGS="$(LOCAL_CFLAGS)" LDFLAGS="$(LOCAL_LDFLAGS)" ./configure --prefix=/usr --datarootdir=/usr/share --disable-static VMODDIR="$(VMODDIR)" VARNISHSRC="$(VARNISHSRC)"
 
 override_dh_gencontrol:
 	echo "Varnish:ABI=$(VMOD_ABI)" >> debian/substvars
@@ -27,28 +27,28 @@ override_dh_gencontrol:
 	fi
 
 override_dh_auto_build:
+	$(MAKE) -C libvmod-querystring-4.0
 	$(MAKE) -C libvmod-chromelogger-4.0
 	$(MAKE) -C libvmod-cookie-4.0
 	$(MAKE) -C libvmod-revvar-4.0
 	$(MAKE) -C libvmod-header-4.0
 	$(MAKE) -C libvmod-timers-4.0
-	$(MAKE) -C libvmod-querystring-4.0
 
 override_dh_auto_install:
+	$(MAKE) -C libvmod-querystring-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
 	$(MAKE) -C libvmod-chromelogger-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
 	$(MAKE) -C libvmod-cookie-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
 	$(MAKE) -C libvmod-revvar-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
 	$(MAKE) -C libvmod-header-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
 	$(MAKE) -C libvmod-timers-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
-	$(MAKE) -C libvmod-querystring-4.0 DESTDIR=$$(pwd)/debian/revsw-varnish4-modules install
 
 override_dh_auto_clean:
+	$(MAKE) -C libvmod-querystring-4.0 distclean || true
 	$(MAKE) -C libvmod-chromelogger-4.0 distclean || true
 	$(MAKE) -C libvmod-cookie-4.0 distclean || true
 	$(MAKE) -C libvmod-revvar-4.0 distclean || true
 	$(MAKE) -C libvmod-header-4.0 distclean || true
 	$(MAKE) -C libvmod-timers-4.0 distclean || true
-	$(MAKE) -C libvmod-querystring-4.0 distclean || true
 
 override_dh_strip:
 	dh_strip --dbg-package=revsw-varnish4-modules-dbg
diff --git a/libvmod-querystring-4.0/src/vmod_querystring.c b/libvmod-querystring-4.0/src/vmod_querystring.c
index 53229c2..5a16872 100644
--- a/libvmod-querystring-4.0/src/vmod_querystring.c
+++ b/libvmod-querystring-4.0/src/vmod_querystring.c
@@ -1,13 +1,13 @@
 /*
  * libvmod-querystring - querystring manipulation module for Varnish
- * 
+ *
  * Copyright (C) 2012-2014, Dridi Boukelmoune <dridi.boukelmoune@gmail.com>
  * All rights reserved.
- * 
+ *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
- * 
+ *
  * 1. Redistributions of source code must retain the above
  *    copyright notice, this list of conditions and the following
  *    disclaimer.
@@ -15,7 +15,7 @@
  *    copyright notice, this list of conditions and the following
  *    disclaimer in the documentation and/or other materials
  *    provided with the distribution.
- * 
+ *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
@@ -30,6 +30,7 @@
  * OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
+#define _GNU_SOURCE  // required for strchrnul()
 #include <stdlib.h>
 #include <string.h>
 #include <stdarg.h>
@@ -265,6 +266,26 @@ is_param_filtered(const char *param, int length, struct filter_context *context)
 }
 
 static bool
+is_param_filtered_csv(const char *param, int length, struct filter_context *context)
+{
+	if (length == 0) {
+		return true;
+	}
+
+	const char *p = context->params.filter.params;
+
+	while (*p) {
+        const char *end = strchrnul(p, ',');
+		if (end-p == length && strncmp(param, p, end-p) == 0) {
+			return true ^ context->is_kept;
+		}
+		p = *end ? end+1 : end;
+	}
+
+	return false ^ context->is_kept;
+}
+
+static bool
 is_param_regfiltered(const char *param, int length, struct filter_context *context)
 {
 	if (length == 0) {
@@ -475,6 +496,28 @@ vmod_filter(struct sess *sp, const char *uri, const char *params, ...)
 }
 
 const char *
+vmod_filter_csv(struct sess *sp, const char *uri, const char *params)
+{
+	struct filter_context context;
+	const char *filtered_uri;
+
+	CHECK_OBJ_NOTNULL(sp, SESS_MAGIC);
+	QS_LOG_CALL(sp, "\"%s\", \"%s\"", uri, params);
+
+	context.type = filter;
+	context.ws = sp->ws;
+	context.uri = uri;
+	context.params.filter.params = params;
+	context.is_filtered = &is_param_filtered_csv;
+	context.is_kept = false;
+
+	filtered_uri = filter_querystring(&context);
+
+	QS_LOG_RETURN(sp, filtered_uri);
+	return filtered_uri;
+}
+
+const char *
 vmod_filter_except(struct sess *sp, const char *uri, const char *params, ...)
 {
 	struct filter_context context;
@@ -499,6 +542,28 @@ vmod_filter_except(struct sess *sp, const char *uri, const char *params, ...)
 }
 
 const char *
+vmod_filter_except_csv(struct sess *sp, const char *uri, const char *params)
+{
+	struct filter_context context;
+	const char *filtered_uri;
+
+	CHECK_OBJ_NOTNULL(sp, SESS_MAGIC);
+	QS_LOG_CALL(sp, "\"%s\", \"%s\"", uri, params);
+
+	context.type = filter;
+	context.ws = sp->ws;
+	context.uri = uri;
+	context.params.filter.params = params;
+	context.is_filtered = &is_param_filtered_csv;
+	context.is_kept = true;
+
+	filtered_uri = filter_querystring(&context);
+
+	QS_LOG_RETURN(sp, filtered_uri);
+	return filtered_uri;
+}
+
+const char *
 vmod_regfilter(struct sess *sp, const char *uri, const char *regex)
 {
 	struct filter_context context;
@@ -631,6 +696,28 @@ vmod_filter(const struct vrt_ctx *ctx, const char *uri, const char *params, ...)
 }
 
 const char *
+vmod_filter_csv(const struct vrt_ctx *ctx, const char *uri, const char *params)
+{
+	struct filter_context context;
+	const char *filtered_uri;
+
+	CHECK_OBJ_NOTNULL(ctx, VRT_CTX_MAGIC);
+	QS_LOG_CALL(ctx, "\"%s\", \"%s\"", uri, params);
+
+	context.type = filter;
+	context.ws = ctx->ws;
+	context.uri = uri;
+	context.params.filter.params = params;
+	context.is_filtered = &is_param_filtered_csv;
+	context.is_kept = false;
+
+	filtered_uri = filter_querystring(&context);
+
+	QS_LOG_RETURN(ctx, filtered_uri);
+	return filtered_uri;
+}
+
+const char *
 vmod_filter_except(const struct vrt_ctx *ctx, const char *uri, const char *params, ...)
 {
 	struct filter_context context;
@@ -655,6 +742,28 @@ vmod_filter_except(const struct vrt_ctx *ctx, const char *uri, const char *param
 }
 
 const char *
+vmod_filter_except_csv(const struct vrt_ctx *ctx, const char *uri, const char *params)
+{
+	struct filter_context context;
+	const char *filtered_uri;
+
+	CHECK_OBJ_NOTNULL(ctx, VRT_CTX_MAGIC);
+	QS_LOG_CALL(ctx, "\"%s\", \"%s\", ...", uri, params);
+
+	context.type = filter;
+	context.ws = ctx->ws;
+	context.uri = uri;
+	context.params.filter.params = params;
+	context.is_filtered = &is_param_filtered_csv;
+	context.is_kept = true;
+
+	filtered_uri = filter_querystring(&context);
+
+	QS_LOG_RETURN(ctx, filtered_uri);
+	return filtered_uri;
+}
+
+const char *
 vmod_regfilter(const struct vrt_ctx *ctx, const char *uri, const char *regex)
 {
 	struct filter_context context;
diff --git a/libvmod-querystring-4.0/src/vmod_querystring3.vcc b/libvmod-querystring-4.0/src/vmod_querystring3.vcc
index 4c5932c..55689cc 100644
--- a/libvmod-querystring-4.0/src/vmod_querystring3.vcc
+++ b/libvmod-querystring-4.0/src/vmod_querystring3.vcc
@@ -8,6 +8,8 @@ Function STRING sort(STRING)
 Function STRING filtersep()
 Function STRING filter(STRING, STRING_LIST)
 Function STRING filter_except(STRING, STRING_LIST)
+Function STRING filter_csv(STRING, STRING)
+Function STRING filter_except_csv(STRING, STRING)
 
 Function STRING regfilter(STRING, STRING)
 Function STRING regfilter_except(STRING, STRING)
diff --git a/libvmod-querystring-4.0/src/vmod_querystring4.vcc b/libvmod-querystring-4.0/src/vmod_querystring4.vcc
index 0bee914..f52582f 100644
--- a/libvmod-querystring-4.0/src/vmod_querystring4.vcc
+++ b/libvmod-querystring-4.0/src/vmod_querystring4.vcc
@@ -96,9 +96,29 @@ Description
 Example
    .. sourcecode::
 
-      set req.url = querystring.filter(req.url,
+      set req.url = querystring.filter_except(req.url,
                                        "q" + querystring.filtersep() + "p");
 
+$Function STRING filter_csv(STRING, STRING)
+
+Description
+   Returns the given URI without the listed comma-separated parameters
+Example
+   .. sourcecode::
+
+      set req.url = querystring.filter_csv(req.url,
+        "utm_source,utm_medium,utm_campaign");
+
+
+$Function STRING filter_except_csv(STRING, STRING)
+
+Description
+   Returns the given URI but only keeps the listed comma-separated parameters
+Example
+   .. sourcecode::
+
+      set req.url = querystring.filter_except_csv(req.url, "q,p");
+
 $Function STRING regfilter(STRING, STRING)
 
 Description
-- 
2.7.4

