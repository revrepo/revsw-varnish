From c2be4e74d63b13e94f2c90fa390967e6f8c1415e Mon Sep 17 00:00:00 2001
From: sorinrevsw <sorin@revsw.com>
Date: Tue, 27 Jan 2015 20:12:10 +0200
Subject: [PATCH 38/63] * Different way of computing time in 'timers' VMOD. *
 Added 'req_processing_time' function to 'timers' VMOD.

---
 debian/changelog                       |  7 +++++++
 libvmod-timers-4.0/src/vmod_timers.c   | 36 ++++++++++++++++++++++++++++++----
 libvmod-timers-4.0/src/vmod_timers.vcc |  1 +
 3 files changed, 40 insertions(+), 4 deletions(-)

diff --git a/debian/changelog b/debian/changelog
index 4190fea..429c6c9 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -1,3 +1,10 @@
+revsw-varnish4-modules (0.5-6) unstable; urgency=medium
+
+  * Different way of computing time in 'timers' VMOD.
+  * Added 'req_processing_time' function to 'timers' VMOD.
+
+ -- Sorin Otescu <sorin@revsw.com>  Tue, 27 Jan 2015 18:29:47 +0200
+
 revsw-varnish4-modules (0.5-5) unstable; urgency=medium
 
   * Added 'filter_csv' and 'filter_except_csv' to 'querystring' VMOD.
diff --git a/libvmod-timers-4.0/src/vmod_timers.c b/libvmod-timers-4.0/src/vmod_timers.c
index a06a973..68943d7 100644
--- a/libvmod-timers-4.0/src/vmod_timers.c
+++ b/libvmod-timers-4.0/src/vmod_timers.c
@@ -15,6 +15,15 @@
 #define _DEBUG 0
 #endif
 
+#if 0
+#define NOW (ctx->now)
+#else
+
+double VTIM_real(void);
+#define NOW VTIM_real()
+
+#endif
+
 /*  XXX This is all true for varnish 3.0.3 - the varnish 3 BRANCH is already structured,
     differently. Ectx->req->specially the session struct has changed, with more data moving into
     the request struct instead :(
@@ -169,6 +178,9 @@ VCL_INT
 vmod_req_handle_time( const struct vrt_ctx *ctx, struct vmod_priv *priv ) {
     config_t *cfg   = priv->priv;
 
+    if (isnan(ctx->req->t_req) || isnan(ctx->req->t_first))
+        return -1;
+
     return (int) ((ctx->req->t_req - ctx->req->sp->t_open) * cfg->multiplier);
 }
 
@@ -177,11 +189,25 @@ VCL_INT
 vmod_req_response_time( const struct vrt_ctx *ctx, struct vmod_priv *priv ) {
     config_t *cfg   = priv->priv;
 
-    // The rectx->req->sponse may not have been sent yet (say you're calling this
+    // The response may not have been sent yet (say you're calling this
     // from vcl_recv) - Return -1 in that case.
+    if (isnan(ctx->req->t_req))
+        return -1;
 
-    int rv = (int) ((ctx->req->t_prev - ctx->req->t_req) * cfg->multiplier);
-    return rv >= 0 ? rv : -1;
+    return (int) ((ctx->now - ctx->req->t_req) * cfg->multiplier);
+}
+
+// Duration of Request headers received -> now.
+VCL_INT
+vmod_req_processing_time( const struct vrt_ctx *ctx, struct vmod_priv *priv ) {
+    config_t *cfg   = priv->priv;
+
+    // The response may not have been sent yet (say you're calling this
+    // from vcl_recv) - Return -1 in that case.
+    if (isnan(ctx->req->t_first))
+        return -1;
+
+    return (int) ((NOW - ctx->req->t_first) * cfg->multiplier);
 }
 
 // Duration of First byte -> Last byte
@@ -194,8 +220,10 @@ VCL_INT
 vmod_req_delivery_time( const struct vrt_ctx *ctx, struct vmod_priv *priv ) {
     config_t *cfg   = priv->priv;
 
-    // The rectx->req->sponse may not have been sent yet (say you're calling this
+    // The response may not have been sent yet (say you're calling this
     // from vcl_recv) - Return -1 in that case.
+    if (isnan(ctx->req->t_prev) || isnan(ctx->req->sp->t_idle))
+        return -1;
 
     int rv = (int) ((ctx->req->sp->t_idle - ctx->req->t_prev) * cfg->multiplier);
     return rv >= 0 ? rv : -1;
diff --git a/libvmod-timers-4.0/src/vmod_timers.vcc b/libvmod-timers-4.0/src/vmod_timers.vcc
index 8ee754f..c0fa66c 100644
--- a/libvmod-timers-4.0/src/vmod_timers.vcc
+++ b/libvmod-timers-4.0/src/vmod_timers.vcc
@@ -9,4 +9,5 @@ $Function REAL req_end(PRIV_VCL)
 $Function TIME req_end_as_string(PRIV_VCL)
 $Function INT req_handle_time(PRIV_VCL)
 $Function INT req_response_time(PRIV_VCL)
+$Function INT req_processing_time(PRIV_VCL)
 $Function INT req_delivery_time(PRIV_VCL)
-- 
2.7.4

