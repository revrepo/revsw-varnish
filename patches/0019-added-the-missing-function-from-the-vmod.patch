From 0af228cd57a2926fb7adaf73678f8cd204897870 Mon Sep 17 00:00:00 2001
From: vimal gupta <vimal.gupta@techvedika.com>
Date: Fri, 19 Dec 2014 16:59:51 +0530
Subject: [PATCH 19/63] added the missing function from the vmod

---
 libvmod-var-4.0/src/vmod_var.c   | 76 ++++++++++++++++++++++++++++++++++++++++
 libvmod-var-4.0/src/vmod_var.vcc |  4 +++
 2 files changed, 80 insertions(+)

diff --git a/libvmod-var-4.0/src/vmod_var.c b/libvmod-var-4.0/src/vmod_var.c
index ec1c653..b129eee 100644
--- a/libvmod-var-4.0/src/vmod_var.c
+++ b/libvmod-var-4.0/src/vmod_var.c
@@ -174,6 +174,40 @@ vmod_set_string(const struct vrt_ctx *ctx, VCL_STRING name, VCL_STRING value)
 	v->value.STRING = WS_Copy(ctx->ws, value, -1);
 }
 
+VCL_VOID
+vmod_set_string_allow_null(const struct vrt_ctx *ctx, VCL_STRING name, VCL_STRING value)
+{
+	struct var *v;
+
+	if (name == NULL)
+		return;
+	v = vh_get_var_alloc(get_vh(ctx), name, ctx);
+	AN(v);
+	
+    if (value) {
+        v->type = STRING;
+        v->value.STRING = WS_Copy(ctx->ws, value, -1);
+    }
+}
+
+VCL_VOID
+vmod_set_string_literal(const struct vrt_ctx *ctx, VCL_STRING name, VCL_STRING value)
+{
+	struct var *v;
+
+	if (name == NULL)
+		return;
+	v = vh_get_var_alloc(get_vh(ctx), name, ctx);
+	AN(v);
+	
+	v->type = STRING;
+	if (value == NULL)
+		value = "";
+    /* 'value' is a constant, literal string which is "allocated" at compile time.
+     * Don't need to dup it.
+     */
+	v->value.STRING = (char *)value;
+}
 VCL_STRING
 vmod_get_string(const struct vrt_ctx *ctx, VCL_STRING name)
 {
@@ -225,6 +259,48 @@ VMOD_GET_X(REAL, real, VCL_REAL)
 VMOD_GET_X(DURATION, duration, VCL_DURATION)
 VMOD_GET_X(BOOL, bool, unsigned)
 
+unsigned
+vmod_and_or_set_bool(const struct vrt_ctx *ctx, VCL_STRING name, unsigned value)
+{
+	struct var *v;
+	if (name == NULL)
+		return 0;
+	v = vh_get_var_alloc(get_vh(ctx), name, ctx);
+	if (!v) {
+		
+		AN(v);
+		
+		v->type = BOOL;
+		v->value.BOOL = value;
+	} else {
+		if (v->type != BOOL)
+			return 0;
+		v->value.BOOL = v->value.BOOL && value;
+	}
+	return v->value.BOOL;
+}
+
+unsigned
+vmod_or_or_set_bool(const struct vrt_ctx *ctx, VCL_STRING name, unsigned value)
+{
+	struct var *v;
+	if (name == NULL)
+		return 0;
+	v = vh_get_var_alloc(get_vh(ctx), name, ctx);
+	if (!v) {
+		
+		AN(v);
+		
+		v->type = BOOL;
+		v->value.BOOL = value;
+	} else {
+		if (v->type != BOOL)
+			return 0;
+		v->value.BOOL = v->value.BOOL || value;
+	}
+	return v->value.BOOL;
+}
+
 VCL_VOID
 vmod_clear(const struct vrt_ctx *ctx)
 {
diff --git a/libvmod-var-4.0/src/vmod_var.vcc b/libvmod-var-4.0/src/vmod_var.vcc
index da6b8bd..6261008 100644
--- a/libvmod-var-4.0/src/vmod_var.vcc
+++ b/libvmod-var-4.0/src/vmod_var.vcc
@@ -22,6 +22,8 @@ $Function BOOL global_get_bool(STRING)
 $Function VOID set_int(STRING, INT)
 $Function INT get_int(STRING)
 $Function VOID set_string(STRING, STRING)
+$Function VOID set_string_allow_null(STRING, STRING)
+$Function VOID set_string_literal(STRING, STRING)
 $Function STRING get_string(STRING)
 $Function VOID set_real(STRING, REAL)
 $Function REAL get_real(STRING)
@@ -29,5 +31,7 @@ $Function VOID set_duration(STRING, DURATION)
 $Function DURATION get_duration(STRING)
 $Function VOID set_bool(STRING, BOOL)
 $Function BOOL get_bool(STRING)
+$Function BOOL and_or_set_bool(STRING, BOOL)
+$Function BOOL or_or_set_bool(STRING, BOOL)
 
 $Function VOID clear()
-- 
2.7.4

